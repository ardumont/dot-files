;; Hey, Emacs! This is a -*- lisp -*- file!

(setf *frame-number-map* "abcdefghijklmnopqrst")

(setf *window-format* "%m%n%s nm=%50t cl=%c id=%i")

;;; Window Appearance
;; The width in pixels given to the borders of regular windows.
(setf *normal-border-width* 0)
;; The width in pixels given to the borders of windows with maxsize or ratio hints.
(setf *maxsize-border-width* 0)
;; The width in pixels given to the borders of transient or pop-up windows.
(setf *transient-border-width* 0)

;;(run-commands "restore-from-file ~/.stumpwm.screendump")

(in-package :stumpwm)

(defun shell-command (command)
  "Run a shell command and display output to screen.
   This must be used in a functional side-effects-free style!
   If a program does not exit, Stumpwm might hang!"
  (check-type command string)
  (echo-string (current-screen) (run-shell-command command t)))

(defun run-shl (&rest cmd)
  "A simpler command to run-shell-command with multiple params"
  (run-shell-command (apply #'concatenate 'string cmd)))

;; ----------------- personal functions

(defun toggle-touchpad-manual (status)
  "Activate/Deactivate the touchpad depending on the status parameter (0/1)."
  (run-shl "~/bin/stumpwm/toggle-touchpad-manual.sh " status)
  ;; banish the mouse from the screen when we deactivate the touchpad
  (if (equal "0" status) (stumpwm::banish)))

(defmacro roraise-and-touchpad-off (command class)
  "Wrap a call to the run-or-raise command but before toggle off the touchpad."
  `(progn
     (toggle-touchpad-manual "0")
     (run-or-raise ,command '(:class ,class))))

(defmacro roraise-and-touchpad-on (command class)
  "Wrap a call to the run-or-raise command but before toggle off the touchpad."
  `(progn
     (toggle-touchpad-manual "1")
     (run-or-raise ,command '(:class ,class))))

;; (defcommand name (args) (interactive-args) "doc-string" (body))
;; wrapper around the zenity cli
(defcommand zenity (command) ()
   "Wrap a call to the cli and output the result into a zenity window"
   (run-shl "zenity --info --text \"$(" command ")\""))

;; ----------------- personal functions

;; C-t T - Toggle on/off the touchpad
(defcommand toggle-touchpad-auto () ()
  "Activate/Deactivate automatically the touchpad depending on the current status."
  (run-shl "~/bin/stumpwm/toggle-touchpad.sh")
  (stumpwm::banish))
(define-key *root-map* (kbd "T") "toggle-touchpad-auto")

;; ----------------- zenity commands

;; C-t K - Display the keys the user-agent holds
(defcommand ssh-add-list () ()
  "run the ~/bin/ssh-add.sh script."
  (zenity "ssh-add -L"))
(define-key *root-map* (kbd "K") "ssh-add-list")

;; C-t E - Display the contents of the /etc/environment
(defcommand cat-etc-environment () ()
  "Display the content of the file /etc/environment."
  (zenity "cat /etc/environment"))
(define-key *root-map* (kbd "E") "cat-etc-environment")

;; C-t H - Display the contents of /etc/hosts
(defcommand cat-etc-hosts () ()
  "cat /etc/hosts"
  (zenity "cat /etc/hosts"))
(define-key *root-map* (kbd "H") "cat-etc-hosts")

;; C-t I - Display the network properties
(defcommand sbin-ifconfig () ()
  "cat /etc/hosts"
  (zenity "/sbin/ifconfig"))
(define-key *root-map* (kbd "I") "sbin-ifconfig")

;; C-t B - Display the battery stat
(defcommand acpi-cmd () ()
  "acpi -b"
  (zenity "/usr/bin/acpi -b"))
(define-key *root-map* (kbd "B") "acpi-cmd")

;; ----------------- run-or-raise commands

;; C-t x - Terminal and switch off the touchpad
(defcommand terminal () ()
  "Run an xterm instance or if already running, switch to it."
  (roraise-and-touchpad-off "gnome-terminal --hide-menubar" "Gnome-terminal"))
(define-key *root-map* (kbd "x") "terminal")

;; C-t e - Emacs and switch off the touchpad
(defcommand myemacs () ()
  "Run an xterm instance or if already running, switch to it."
  ;; raise emacs
  (roraise-and-touchpad-off "emacsclient -c" "Emacs24"))
(define-key *root-map* (kbd "e") "myemacs")

;; C-t c - Conkeror - keyboard-driven navigator
(defcommand conkeror () ()
  "Run a conkeror instance or if already running, switch to it."
  ;; raise emacs
  (roraise-and-touchpad-off "conkeror" "Conkeror"))
(define-key *root-map* (kbd "c") "conkeror")

;; C-t f - Firefox
(defcommand firefox () ()
  "Run a firefox instance or if already running, switch to it."
  (roraise-and-touchpad-on "firefox" "Firefox"))
(define-key *root-map* (kbd "f") "firefox")

;; C-t b - Chromium
(defcommand chromium-browser () ()
  "Run a chromium instance or if already running, switch to it."
  (roraise-and-touchpad-on "chromium-browser" "Chromium-browser"))
(define-key *root-map* (kbd "b") "chromium-browser")

;; C-t C-b - Google-chrome
(defcommand google-chrome () ()
  "Run a google-chrome instance or if already running, switch to it."
  (roraise-and-touchpad-on "google-chrome --no-proxy-server" "Google-chrome"))
(define-key *root-map* (kbd "C-b") "google-chrome")

;; ----------------- run-shell-commands commands

;; C-t A - Load the identities from the ~/.ssh-agent-identities file
(defcommand ssh-add-identities () ()
  "Add the identities present in ~/.ssh-agent-identities script."
  (run-shell-command "~/bin/ssh/ssh-add.sh"))
(define-key *root-map* (kbd "A") "ssh-add-identities")

;; C-t p - Activate the proxy (ask for su rights)
(defcommand switch-to-proxy () ()
  "Switch to proxy."
  (run-shell-command "gksudo ~/bin/proxy/proxy.sh on && killall nm-applet"))
(define-key *root-map* (kbd "p") "switch-to-proxy")

;; C-t P - Deactivate the proxy
(defcommand switch-to-no-proxy () ()
  "Switch to no proxy."
  (run-shell-command "gksudo ~/bin/proxy/proxy.sh off && killall nm-applet"))
(define-key *root-map* (kbd "P") "switch-to-no-proxy")

;; C-t L - Reload the ~/.stumpwmrc configuration
(define-key *root-map* (kbd "L") "loadrc")

;; C-t F6 - Decrement the brightness
(defcommand dec-brightness () ()
  "Brightness decrement"
  (run-shell-command "for i in {1..5}; do ~/bin/brightness/dec.sh; done"))
(define-key *root-map* (kbd "F5") "dec-brightness")

;; C-t F5 - Increment the brightness
(defcommand inc-brightness () ()
  "Brightness increment"
  (run-shell-command "for i in {1..5}; do ~/bin/brightness/inc.sh; done"))
(define-key *root-map* (kbd "F6") "inc-brightness")

;; C-t ^ - top
(defcommand top () ()
  "Display a single 'top' frame."
  (shell-command "top -b -n 1 -c -d 1"))
(define-key *root-map* (kbd "^") "top")

;; C-t o - Frame selection
(define-key *root-map* (kbd "o") "fselect")

;; C-t i - IDE java (unfortunately)
(defprogram-shortcut :eclipse :command "~/bin/ide/eclipse.sh"
                     :props '(:class "Eclipse")
                     :map *root-map* :key (kbd "i"))

;; C-t , - Gnome-control-center
(defprogram-shortcut :gnome-control-center :command "gnome-control-center"
                     :props '(:class "Gnome-Control-Center")
                     :map *root-map* :key (kbd ","))

;; C-t . - Totem
(defprogram-shortcut :video-player :command "totem"
                     :props '(:class "Totem")
                     :map *root-map* :key (kbd "."))

;; C-t j - Intellij-idea
(defprogram-shortcut :intellij-idea :command "~/applications/idea/bin/idea.sh"
                     :props '(:class "jetbrains-idea-ce")
                     :map *root-map* :key (kbd "j"))

;; C-t n - File explorer nautilus
(defprogram-shortcut :nautilus :command "nautilus"
                     :props '(:instance "nautilus")
                     :map *root-map* :key (kbd "n"))

;; C-t / - Transmission-gtk
(defprogram-shortcut :torrent :command "transmission-gtk"
                     :props '(:instance "transmission-gtk")
                     :map *root-map* :key (kbd "/"))

;; C-t C-e - PDF reader evince
(defprogram-shortcut :evince :command "evince"
                     :props '(:instance "evince")
                     :map *root-map* :key (stumpwm:kbd "C-e"))

;; C-t C-o - Image reader eog
(defprogram-shortcut :eog :command "eog"
                     :props '(:instance "eog")
                     :map *root-map* :key (stumpwm:kbd "C-o"))

;; C-t C-s - Add a binding for gnome-screenshot
(defprogram-shortcut :screenshot :command "gnome-screenshot"
                     :props '(:instance "gnome-screenshot")
                     :map *root-map* :key (stumpwm:kbd "C-s"))

;; C-t y - yEd
(defprogram-shortcut :yEd :command "~/bin/app/yed.sh"
                     :props '(:instance "sun-awt-X11-XFramePeer")
                     :map *root-map* :key (kbd "y"))

;; C-t C-c - arduino ide
(defprogram-shortcut :arduino :command "arduino"
                     :props '(:class "processing-app-Base")
                     :map *root-map* :key (stumpwm:kbd "C-c"))

;; C-t d - pinta - lightweight drawing soft
(defprogram-shortcut :pinta :command "pinta"
                     :props '(:instance "Pinta")
                     :map *root-map* :key (kbd "d"))

;; C-t C-d - gimp - not so lightweight drawing soft
(defprogram-shortcut :gimp :command "gimp"
                     :props '(:instance "gimp")
                     :map *root-map* :key (stumpwm:kbd "C-d"))

;; C-t C-f - fritzing
(defprogram-shortcut :fritzing :command "~/applications/fritzing/Fritzing"
                     :props '(:instance "Fritzing")
                     :map *root-map* :key (stumpwm:kbd "C-f"))

;; C-t C-v - Virtualbox
(defprogram-shortcut :virtualbox :command "virtualbox"
                     :props '(:instance "Qt-subapplication")
                     :map *root-map* :key (stumpwm:kbd "C-v"))

;;Set the mouse focus policy to ignore the mouse
(setf *mouse-focus-policy* :ignore) ;; :click, :ignore, :sloppy

;; Launch commands
(run-shell-command "/usr/bin/gnome-settings-daemon")
(run-shell-command "killall nm-applet && /usr/bin/nm-applet &")
(run-shell-command "/usr/bin/bluetooth-applet &")
(run-shell-command "/usr/bin/pactl load-module module-x11-xsmp &")
(run-shell-command "gnome-power-manager")
(run-shell-command "gnome-panel --replace &")
(run-shell-command "dropbox start")
(run-shell-command "nautilus --no-default-window")
;; start an emacs server in background
(run-shell-command "emacs --daemon &")
(terminal)
