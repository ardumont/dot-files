// -*- javascript -*-

/* ------------------------------------------------------------------------- */
/*                     Conkeror config file                                  */
/* ------------------------------------------------------------------------- */


require("global-overlay-keymap");
define_key_alias("C-m", "return");
define_key_alias("C-j", "return");
define_key_alias("C-i", "tab");

/* ------------------- url completion --------------------------------------*/

url_completion_use_history = true;
url_completion_use_bookmarks = true;

/* links opened from other applications open in conkeror */
url_remoting_fn = load_url_in_new_buffer;

/* mode-line widget config  ----------------------------------*/

/* ------------------- buffer count indicator ----------------------------------*/

// add_hook("mode_line_hook", mode_line_adder(buffer_count_widget), true);

/* ------------------- remove useless clock ----------------------------------*/

// remove_hook("mode_line_hook", mode_line_adder(clock_widget));

/* Displaying Favicons */

require("favicon");

/* ---------------- favicon in mode line */

// add_hook("mode_line_hook", mode_line_adder(buffer_icon_widget), true);

/* ---------------- favicon in mini buffer */

read_buffer_show_icons = true;

/* ---------------- Using letters as hints */

hint_digits="qwertyzvbshkl";

// supposed to be set to a number of milliseconds to
// wait after each keystroke before automatically
// closing hints mode with the currently selected
// hint as the final result, when the input has
// narrowed the selection down to one possibility.
hints_auto_exit_delay=0.1; // work if only > 0

/* ---------------- display tabs */


require("new-tabs");
require("github");
require("gmail");
require("~/.conkeror/inbox.js");
require("youtube");
require("youtube-player");
require("twitter");
require("duckduckgo");
require("google-calendar");
require("google-maps");

/* web jumps */

/* -------------- imdb */
/* type 'i your film' in the mini buffer to search 'your film'  on imdb*/

define_webjump("i", "http://imdb.com/find?q=%s");
define_webjump("g", "http://www.google.fr/search?q=%s");
define_webjump("w", "http://en.wikipedia.org?search=%s");

/* TODO : add :
   - w wikipedia
   - a amazon */

/* javascript injection (jquery) */
/*
To use this,

  M-x jquery-here
  jq> $("h1").css("backgroundColor", "blue");
  */
function install_jquery(d) {
    var script_el = d.createElementNS(XHTML_NS, "script");
    script_el.setAttribute("language", "javascript");
    script_el.setAttribute("type", "text/javascript");
    script_el.setAttribute("src", "http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js");
    d.body.appendChild(script_el);
}

function jquery_this_doc(d, js_code) {
    install_jquery(d);
    var script_el = d.createElementNS(XHTML_NS, "script");
    script_el.textContent = js_code;
    d.body.appendChild(script_el);
}

interactive("jquery-here",
            "load jquery.js into this page, then your command",
            function(I) {
                jquery_this_doc(I.buffer.document, (yield I.minibuffer.read($prompt = "jq> ", $history = "jquery-here")));
                // Providing a $history is what allows editing/replay of earlier commands
            });

// binding.js is the binding orchestrator
// -------- basic command.js
// -------- global.js

// Base binding for help (C-h by default)
define_key(default_global_keymap, "M-?", default_help_keymap);

// buffer manipulation
define_key(default_global_keymap, "C-w", "kill-current-buffer"); // default: q
define_key(default_global_keymap, "C-x k", "kill-current-buffer"); // default: q
define_key(default_global_keymap, "C-x C-k", "kill-buffer");// default: C-x k

// -------- text.js

// rebind global (for help: M-?)
//define_key(default_global_keymap, "C-h", "go-back");

define_key(text_keymap, "C-h", "cmd_deleteCharBackward"); // default: backspace
define_key(text_keymap, "M-C-h", "cmd_deleteWordBackward");// default: backspace

// default interesting binding to maybe exploit for selection
// define_key(text_keymap, "S-home", "cmd_selectBeginLine");
// define_key(text_keymap, "S-end", "cmd_selectEndLine");
// define_key(text_keymap, "C-S-left", "cmd_selectWordPrevious");
// define_key(text_keymap, "C-S-right", "cmd_selectWordNext");

// -------- content-buffer/normal.js

define_key(content_buffer_normal_keymap, "C-c f", "forward");
define_key(content_buffer_normal_keymap, "C-c b", "back");
define_key(content_buffer_normal_keymap, "C-c r", "reload");

// define_key(content_buffer_normal_keymap, "C-h", "go-back");
// define_key(content_buffer_normal_keymap, "S-C-h", "go-forward");

define_key(content_buffer_normal_keymap, "C-i", "browser-focus-next-form-field");
define_key(content_buffer_normal_keymap, "C-S-i", "browser-focus-previous-form-field");

// rebound from element.js
//define_key(content_buffer_normal_keymap, "k", "bookmark");

// --------- minibuffer.js

define_key(minibuffer_keymap, "C-m", "exit-minibuffer");// default: return (`enter`)

define_key(minibuffer_keymap, "C-i", "minibuffer-complete");
define_key(minibuffer_keymap, "C-S-i", "minibuffer-complete-previous");

// --------- hints.js

define_key(hint_keymap, "C-h", "hints-backspace");
define_key(hint_keymap, "C-i", "hints-next");
define_key(hint_keymap, "C-S-i", "hints-previous");
define_key(hint_keymap, "C-m", "hints-exit");

// find a way to use letters instead of number for hint representation
//define_key(hint_keymap, match_hint_digit, "hints-handle-number");


// --------- isearch.js

define_key(isearch_keymap, "C-h", "isearch-backspace");// default: back_space

// --------- content-buffer/text.js

define_key(content_buffer_text_keymap, "C-i", "");// default: `edit-current-field-in-external-editor` function, use C-x x instead

// --------- content-buffer/element.js

define_key(content_buffer_normal_keymap, "d", "follow");// default: f (follow)
define_key(content_buffer_normal_keymap, "C-d", "delete");// default: d (delete dom element)

// --------- old setup (does not know if this work yet)

// // Use `C-i` as tab
// define_key(google_gqueues_keymap, "C-i", null, $fallthrough);
// define_key(gmail_keymap, "C-i", null, $fallthrough);
// define_key(google_calendar_keymap, "C-i", null, $fallthrough);

// define_key(google_gqueues_keymap, "C-S-i", null, $fallthrough);

// // Use `C-m` as `return`
// define_key(content_buffer_anchor_keymap, "C-m", "follow", $browser_object = browser_object_focused_element);
// define_key(content_buffer_form_keymap, "C-m", null, $fallthrough);
// define_key(content_buffer_select_keymap, "C-m", null, $fallthrough);
// define_key(content_buffer_button_keymap, "C-m", "follow", $browser_object = browser_object_focused_element);

// define_key(gmail_keymap, "C-m", null, $fallthrough);
// define_key(twitter_keymap, "C-m", null, $fallthrough);
// define_key(facebook_keymap, "C-m", null, $fallthrough);
// define_key(google_search_results_keymap, "C-m", "ensure-content-focused", $fallthrough);//BAD
// define_key(google_calendar_keymap, "C-m", null, $fallthrough);
// define_key(duckduckgo_select_keymap, "C-m", "duckduckgo-follow-current");

// --------- mozrepl

user_pref('extensions.mozrepl.autoStart', true); /* autostart */

if ('@hyperstruct.net/mozlab/mozrepl;1' in Cc) {
    let mozrepl = Cc['@hyperstruct.net/mozlab/mozrepl;1']
        .getService(Ci.nsIMozRepl);
    if (!mozrepl.isActive())
        mozrepl.start(4242);
}
